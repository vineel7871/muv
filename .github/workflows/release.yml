name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: muv
            asset_name: muv-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: muv
            asset_name: muv-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: muv
            asset_name: muv-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: muv
            asset_name: muv-macos-arm64

    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
      
      - name: Install cross-compilation tools for Linux ARM64
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu libc6-dev-arm64-cross

      - name: Install cross
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: cargo install cross

      - name: Build for Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi
          
      - name: Build for macOS
        if: startsWith(matrix.os, 'macos')
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}

      - name: Compress binary
        run: |
          cd target/${{ matrix.target }}/release
          tar -czf ${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
          
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: target/${{ matrix.target }}/release/${{ matrix.asset_name }}.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: build-and-upload
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      
      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}

  update-homebrew:
    name: Update Homebrew formula
    runs-on: ubuntu-latest
    needs: build-and-upload
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          repository: vineel7871/homebrew-muv
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          path: homebrew-tap
      
      - name: Download release assets
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          curl -L -o muv-macos-amd64.tar.gz "https://github.com/vineel7871/muv/releases/download/v${VERSION}/muv-macos-amd64.tar.gz"
          curl -L -o muv-macos-arm64.tar.gz "https://github.com/vineel7871/muv/releases/download/v${VERSION}/muv-macos-arm64.tar.gz"
      
      - name: Calculate SHA256
        run: |
          SHA256_AMD64=$(sha256sum muv-macos-amd64.tar.gz | cut -d' ' -f1)
          SHA256_ARM64=$(sha256sum muv-macos-arm64.tar.gz | cut -d' ' -f1)
          echo "SHA256_AMD64=${SHA256_AMD64}" >> $GITHUB_ENV
          echo "SHA256_ARM64=${SHA256_ARM64}" >> $GITHUB_ENV
      
      - name: Update Homebrew formula
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          curl -L -o homebrew-formula.rb.template "https://raw.githubusercontent.com/vineel7871/muv/main/homebrew-formula.rb.template"
          sed "s/{{VERSION}}/${VERSION}/g" homebrew-formula.rb.template > temp.rb
          sed "s/{{SHA256_MACOS_AMD64}}/${SHA256_AMD64}/g" temp.rb > temp2.rb
          sed "s/{{SHA256_MACOS_ARM64}}/${SHA256_ARM64}/g" temp2.rb > homebrew-tap/Formula/muv.rb
          rm temp.rb temp2.rb homebrew-formula.rb.template
      
      - name: Commit and push
        run: |
          cd homebrew-tap
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Formula/muv.rb
          git commit -m "Update muv to ${GITHUB_REF#refs/tags/v}"
          git push