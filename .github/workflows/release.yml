name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: guv
            asset_name: guv-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: guv
            asset_name: guv-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: guv
            asset_name: guv-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: guv
            asset_name: guv-macos-arm64

    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      
      - name: Install cross-compilation tools for Linux ARM64
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}

      - name: Compress binary
        run: |
          cd target/${{ matrix.target }}/release
          tar -czf ${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
          
      - name: Upload binary to release
        uses: softprops/action-gh-release@v1
        with:
          files: target/${{ matrix.target }}/release/${{ matrix.asset_name }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: build-and-upload
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      
      - name: Publish to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CRATES_IO_TOKEN }}